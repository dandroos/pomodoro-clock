{"version":3,"sources":["assets/audio/beep.mp3","redux/reducers/timerReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store.js","components/Header.js","components/subcomponents/Settings.js","redux/actions/timerActions.js","components/subcomponents/Timer.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","session_time","break_time","current_category","current_time","isRunning","combineReducers","timer","state","arguments","length","undefined","action","type","target","middleware","thunk","store","createStore","reducers","applyMiddleware","apply","Header","react_default","a","createElement","id","React","Component","Settings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","e","category","getAttribute","incTime","decTime","document","activeElement","blur","className","onClick","mapDispatchToProps","dispatch","connect","Timer","minutes","seconds","current","is_running","btn_text","startStop","reset","interval","_this2","audio","getElementById","classList","remove","window","clearInterval","setState","add","setInterval","currentTime","play","pause","resetTimes","prevProps","toString","src","beep","Main","subcomponents_Settings","subcomponents_Timer","Footer","App","es","components_Header","Main_Main","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wOCElCC,EAAe,CACjBC,aAAc,GACdC,WAAY,EACZC,iBAAkB,UAClBC,aAAc,GACdC,WAAW,GCJAC,cAAgB,CAC3BC,MDMY,WAA8B,IAA7BC,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBT,EAAcY,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAOC,EAAOC,MACV,IEZsB,iBFalB,OAAOD,EAAOE,QACV,IAAK,YACD,OAAGN,EAAMP,aAAe,GACd,CACFA,aAAcO,EAAMP,aAAe,EACnCC,WAAYM,EAAMN,YAGfM,EAEf,IAAK,aACD,OAAGA,EAAMN,WAAa,GACZ,CACFA,WAAYM,EAAMN,WAAa,EAC/BD,aAAcO,EAAMP,cAGjBO,EAEf,QACI,OAAOA,EAEnB,IElCsB,iBFmClB,OAAOI,EAAOE,QACV,IAAK,YACD,OAAGN,EAAMP,aAAe,EACd,CACFA,aAAcO,EAAMP,aAAe,EACnCC,WAAYM,EAAMN,YAGfM,EAEf,IAAK,aACD,OAAGA,EAAMN,WAAa,EACZ,CACFA,WAAYM,EAAMN,WAAa,EAC/BD,aAAcO,EAAMP,cAGjBO,EAEf,QACI,OAAOA,EAEnB,IExDa,QFyDT,MAAM,CACFP,aAAc,GACdC,WAAY,GAGpB,QACI,OAAOM,MG1DbO,EAAa,CAACC,KAILC,EAFDC,YAAYC,EAJL,GAI6BC,IAAeC,WAAf,EAAmBN,ICGtDO,mLARX,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,GAAG,WAAP,0BAJaC,IAAMC,kBCErBC,cACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFHA,2EAKNU,GACV,IAAMC,EAAWD,EAAE3B,OAAO6B,aAAa,YAGvC,OAFeF,EAAE3B,OAAO6B,aAAa,WAGnC,IAAK,YACHT,KAAKJ,MAAMc,QAAQF,GACnB,MACF,IAAK,YACHR,KAAKJ,MAAMe,QAAQH,GAKvBI,SAASC,cAAcC,wCAIvB,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACNH,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,WACb1B,EAAAC,EAAAC,cAAA,MAAIC,GAAG,iBAAP,WACAH,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,oBACb1B,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,mBAAmBvB,GAAG,oBAAoBgB,SAAS,YAAY9B,OAAO,YAAYsC,QAAShB,KAAKI,aAAlH,KACAf,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,mBAAmBvB,GAAG,kBAAkBQ,KAAKJ,MAAM7B,cACnEsB,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,mBAAmBvB,GAAG,oBAAoBgB,SAAS,YAAY9B,OAAO,YAAYsC,QAAShB,KAAKI,aAAlH,OAGJf,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,WACb1B,EAAAC,EAAAC,cAAA,MAAIC,GAAG,eAAP,SACAH,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,oBACb1B,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,mBAAmBvB,GAAG,kBAAkBgB,SAAS,aAAa9B,OAAO,YAAYsC,QAAShB,KAAKI,aAAjH,KACAf,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,mBAAmBvB,GAAG,gBAAgBQ,KAAKJ,MAAM5B,YACjEqB,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,mBAAmBvB,GAAG,kBAAkBgB,SAAS,aAAa9B,OAAO,YAAYsC,QAAShB,KAAKI,aAAjH,eAvCWV,aAoDjBuB,EAAqB,CACzBP,QCvDqB,SAAC9B,GAAD,OAAY,SAAAsC,GAC/BA,EAAS,CACLvC,KJJsB,iBIKtBC,OAAQA,MDoDL+B,QChDY,SAAC/B,GAAD,OAAY,SAAAsC,GAC/BA,EAAS,CACLvC,KJVsB,iBIWtBC,OAAQA,ODgDDuC,cATS,SAAA7C,GAAK,MAAK,CAChCP,aAAcO,EAAMD,MAAMN,aAC1BC,WAAYM,EAAMD,MAAML,aAOciD,EAAzBE,CAA6CxB,oBEvDtDyB,cACJ,SAAAA,EAAYxB,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoB,IAChBvB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsB,GAAAjB,KAAAH,KAAMJ,KACDtB,MAAQ,CACX+C,QAAUxB,EAAKD,MAAM7B,aACrBuD,QAAU,EACVC,QAAU,UACVC,YAAa,EACbC,SAAU,SAEZ5B,EAAK6B,UAAY7B,EAAK6B,UAAUrB,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IACjBA,EAAK8B,MAAQ9B,EAAK8B,MAAMtB,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IAEbA,EAAK+B,SAAW,KAZA/B,2EAeP,IAAAgC,EAAA7B,KACH8B,EAAQlB,SAASmB,eAAe,QAClC/B,KAAK1B,MAAMkD,YA6BbZ,SAASmB,eAAe,OAAOC,UAAUC,OAAO,MAChDC,OAAOC,cAAcnC,KAAK4B,UAC1B5B,KAAKoC,SAAS,CACZZ,YAAY,EACZC,SAAU,YAhCZb,SAASmB,eAAe,OAAOC,UAAUK,IAAI,MAC7CrC,KAAKoC,SAAS,CAAEZ,YAAY,EAAMC,SAAU,UAC5CzB,KAAK4B,SAAWU,YAAY,WACvBT,EAAKvD,MAAMgD,QAAU,EACtBO,EAAKO,SAAS,CAACd,QAASO,EAAKvD,MAAMgD,QAAU,IAE1CO,EAAKvD,MAAM+C,QAAU,EACtBQ,EAAKO,SAAS,CAAEf,QAASQ,EAAKvD,MAAM+C,QAAU,EAAGC,QAAS,MAE1DQ,EAAMS,YAAc,EACpBT,EAAMU,OACoB,YAAvBX,EAAKvD,MAAMiD,QACZM,EAAKO,SAAS,CACbb,QAAS,QACTF,QAASQ,EAAKjC,MAAM5B,WACpBsD,QAAS,IAGVO,EAAKO,SAAS,CACZb,QAAS,UACTF,QAASQ,EAAKjC,MAAM7B,aACpBuD,QAAS,MAKhB,MASLV,SAASC,cAAcC,uCAIvBF,SAASmB,eAAe,OAAOC,UAAUC,OAAO,MAChDC,OAAOC,cAAcnC,KAAK4B,UAC1B,IAAME,EAAQlB,SAASmB,eAAe,QACtCD,EAAMW,QACNX,EAAMS,YAAc,EACpBvC,KAAKJ,MAAM8C,aACX1C,KAAKoC,SAAS,CACZZ,YAAY,EACZH,QAASrB,KAAKJ,MAAM7B,aACpBuD,QAAS,EACTC,QAAS,UACTE,SAAU,UAEZb,SAASC,cAAcC,kDAGN6B,GACb3C,KAAK1B,MAAMkD,YACVxB,KAAKJ,MAAM7B,eAAiB4E,EAAU5E,cACvCiC,KAAKoC,SAAS,CAAEf,QAASrB,KAAKJ,MAAM7B,gDAMxC,IAAIsD,EAAUrB,KAAK1B,MAAM+C,QACrBC,EAAUtB,KAAK1B,MAAMgD,QAQzB,OAPGA,EAAU,KACXA,EAAU,IAAMA,EAAQsB,YAGvB5C,KAAK1B,MAAM+C,QAAU,KACtBA,EAAU,IAAMA,EAAQuB,YAGxBvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eAAeQ,KAAK1B,MAAMiD,SAClClC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aAAa6B,EAArB,IAA+BC,IAEjCjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,mBAAmBvB,GAAG,aAAawB,QAAShB,KAAK0B,WAAY1B,KAAK1B,MAAMmD,UAC1FpC,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,mBAAmBvB,GAAG,QAAQwB,QAAShB,KAAK2B,OAA9D,UAEFtC,EAAAC,EAAAC,cAAA,SAAOC,GAAG,QAAOH,EAAAC,EAAAC,cAAA,UAAQsD,IAAKC,eAtGlBpD,aAiHLyB,cALS,SAAA7C,GAAK,MAAK,CAChCP,aAAcO,EAAMD,MAAMN,aAC1BC,WAAYM,EAAMD,MAAML,aAGc,CAAE0E,WDtGhB,kBAAM,SAAAxB,GAC5BA,EAAS,CACLvC,KJhBa,aKoHNwC,CAAyCC,GClHnC2B,mLAEjB,OACE1D,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,QACd1B,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAC0D,EAAD,cAL0BvD,aCFbwD,mLAEjB,OACI7D,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UACPH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,oBAAT,mCAJwBE,aCuBrByD,mLAdb,OACE9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUrE,MAAOA,GACjBM,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACNH,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAACgE,EAAD,gBARU9D,IAAMC,WCGJ8D,QACW,cAA7BtB,OAAOuB,SAASC,UAEe,UAA7BxB,OAAOuB,SAASC,UAEhBxB,OAAOuB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASlD,SAASmB,eAAe,SD2H3C,kBAAmBgC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1d7fa14b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.0063e353.mp3\";","import { INCREMENT_TIME, DECREMENT_TIME, RESET } from '../actions/types';\n\nconst initialState = {\n    session_time: 25,\n    break_time: 5,\n    current_category: 'Session',\n    current_time: 25,\n    isRunning: false\n};\n\nexport default ((state=initialState, action)=>{\n    switch(action.type){\n        case INCREMENT_TIME:\n            switch(action.target){\n                case 'work_time':\n                    if(state.session_time < 60){\n                        return{\n                            session_time: state.session_time + 1,\n                            break_time: state.break_time\n                        }\n                    }else{\n                        return state;  \n                    }\n                case 'break_time':\n                    if(state.break_time < 60){\n                        return{\n                            break_time: state.break_time + 1,\n                            session_time: state.session_time\n                        }\n                    }else{\n                        return state;\n                    }\n                default:\n                    return state;\n            }\n        case DECREMENT_TIME:\n            switch(action.target){\n                case 'work_time':\n                    if(state.session_time > 1){\n                        return{\n                            session_time: state.session_time - 1,\n                            break_time: state.break_time\n                        }\n                    }else{\n                        return state;\n                    }\n                case 'break_time':\n                    if(state.break_time > 1){\n                        return{\n                            break_time: state.break_time - 1,\n                            session_time: state.session_time\n                        }\n                    }else{\n                        return state;\n                    }\n                default:\n                    return state;\n            }\n        case RESET:\n            return{\n                session_time: 25,\n                break_time: 5\n            }\n        \n        default:\n            return state;\n    }\n})","import {combineReducers} from 'redux';\nimport timerReducer from './timerReducer';\n\nexport default combineReducers({\n    timer: timerReducer\n})","export const INCREMENT_TIME = 'INCREMENT_TIME';\nexport const DECREMENT_TIME = 'DECREMENT_TIME';\nexport const RESET = 'RESET';","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducers, initialState, applyMiddleware(...middleware));\n\nexport default store;","import React from 'react'\n\nclass Header extends React.Component {\n  render () {\n    return(\n      <header>\n        <h1 id=\"heading\">Pomodoro Clock</h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { incTime, decTime } from '../../redux/actions/timerActions';\n\nclass Settings extends Component {\n  constructor(props){\n    super(props)\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e){\n    const category = e.target.getAttribute('category');\n    const action = e.target.getAttribute('action');\n    \n    switch(action){\n      case 'increment':\n        this.props.incTime(category);\n        break;\n      case 'decrement':\n        this.props.decTime(category);\n        break;\n      default:\n        break;\n    }\n    document.activeElement.blur();\n  }\n\n  render() {\n    return (\n      <div id=\"settings\">\n        <div className=\"setting\">\n          <h2 id=\"session-label\">Session</h2>\n          <div className=\"setting-controls\">\n            <button className=\"btn btn-settings\" id=\"session-decrement\" category=\"work_time\" action=\"decrement\" onClick={this.handleClick}>-</button>\n            <span className=\"settings-display\" id=\"session-length\">{this.props.session_time}</span>\n            <button className=\"btn btn-settings\" id=\"session-increment\" category=\"work_time\" action=\"increment\" onClick={this.handleClick}>+</button>\n          </div>\n        </div>\n        <div className=\"setting\">\n          <h2 id=\"break-label\">Break</h2>\n          <div className=\"setting-controls\">\n            <button className=\"btn btn-settings\" id=\"break-decrement\" category=\"break_time\" action=\"decrement\" onClick={this.handleClick}>-</button>\n            <span className=\"settings-display\" id=\"break-length\">{this.props.break_time}</span>\n            <button className=\"btn btn-settings\" id=\"break-increment\" category=\"break_time\" action=\"increment\" onClick={this.handleClick}>+</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  session_time: state.timer.session_time,\n  break_time: state.timer.break_time\n})\n\nconst mapDispatchToProps = {\n  incTime, decTime\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import { INCREMENT_TIME, DECREMENT_TIME, RESET } from './types';\n\nexport const incTime = (target) => dispatch =>{\n    dispatch({\n        type: INCREMENT_TIME,\n        target: target\n    })\n}\n\nexport const decTime = (target) => dispatch =>{\n    dispatch({\n        type: DECREMENT_TIME,\n        target: target\n    })\n}\n\nexport const resetTimes = () => dispatch =>{\n    dispatch({\n        type: RESET\n    })\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { resetTimes } from '../../redux/actions/timerActions';\nimport beep from '../../assets/audio/beep.mp3';\n\nclass Timer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      minutes : this.props.session_time,\n      seconds : 0,\n      current : 'Session',\n      is_running : false,\n      btn_text: 'Start'\n    }\n    this.startStop = this.startStop.bind(this);\n    this.reset = this.reset.bind(this);\n    \n    this.interval = null;\n  }\n\n  startStop(){\n    const audio = document.getElementById('beep');\n    if(!this.state.is_running){\n      document.getElementById('app').classList.add('go');\n      this.setState({ is_running: true, btn_text: 'Pause' })\n      this.interval = setInterval(()=>{\n        if(this.state.seconds > 0){\n          this.setState({seconds: this.state.seconds - 1})\n        }else{\n          if(this.state.minutes > 0){\n            this.setState({ minutes: this.state.minutes - 1, seconds: 59 })\n          }else{\n            audio.currentTime = 0;\n            audio.play();\n            if(this.state.current === 'Session'){\n              this.setState({\n               current: 'Break',\n               minutes: this.props.break_time,\n               seconds: 0 \n              })\n            }else{\n              this.setState({\n                current: 'Session',\n                minutes: this.props.session_time,\n                seconds: 0\n              })\n            }\n          }\n        }\n      }, 1000)\n    }else{\n      document.getElementById('app').classList.remove('go');\n      window.clearInterval(this.interval);\n      this.setState({\n        is_running: false,\n        btn_text: 'Start'\n      });\n    }\n    document.activeElement.blur();\n  }\n\n  reset(){\n    document.getElementById('app').classList.remove('go');\n    window.clearInterval(this.interval);\n    const audio = document.getElementById('beep');\n    audio.pause();\n    audio.currentTime = 0;\n    this.props.resetTimes()\n    this.setState({\n      is_running: false,\n      minutes: this.props.session_time,\n      seconds: 0,\n      current: 'Session',\n      btn_text: 'Start'\n    });\n    document.activeElement.blur();\n  }\n\n  componentDidUpdate(prevProps){\n    if(!this.state.is_running){\n      if(this.props.session_time !== prevProps.session_time){\n        this.setState({ minutes: this.props.session_time})\n      }\n    }\n  }\n\n  render() {\n    let minutes = this.state.minutes;\n    var seconds = this.state.seconds;\n    if(seconds < 10){\n      seconds = \"0\" + seconds.toString();\n    }\n\n    if(this.state.minutes < 10){\n      minutes = \"0\" + minutes.toString();\n    }\n    return (\n      <div>\n        <div id=\"timer\">\n          <div id=\"timer-label\">{this.state.current}</div>\n          <div id=\"time-left\">{minutes}:{seconds}</div>\n        </div>\n        <div>\n          <button className=\"btn btn-controls\" id=\"start_stop\" onClick={this.startStop}>{this.state.btn_text}</button>\n          <button className=\"btn btn-controls\" id=\"reset\" onClick={this.reset}>Reset</button>\n        </div>\n        <audio id=\"beep\"><source src={beep} /></audio>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  session_time: state.timer.session_time,\n  break_time: state.timer.break_time\n})\n\nexport default connect(mapStateToProps, { resetTimes })(Timer);","import React, { Component } from 'react'\nimport Settings from './subcomponents/Settings';\nimport Timer from './subcomponents/Timer';\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <main className=\"main\">\n        <Settings />\n        <Timer />\n      </main>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n        <footer id=\"footer\">\n            <span id=\"footer-copyright\">\n                &copy; 2019 David Andrews\n            </span>\n        </footer>\n    )\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  render(){\n  return (\n    <Provider store={store}>\n    <div id=\"app\">\n      <div id=\"app-content\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    </div>\n    </Provider>\n      );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}